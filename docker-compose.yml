version: '3'

services:
  nginx:
    build: ./nginx
    links:
        - catalog
        - orders
        - users
    ports:
        - '80:80'

  users:
    restart: always
    build: ./users
    container_name: users-svc
    links:
      - db
    ports:
      - '3000:8080'
    # volumes:
    #     - './users:/usr/src/app'
    command: npm run serve

  orders:
    restart: always
    build: ./orders
    container_name: orders-svc
    ports:
      - '3001:8080'
    # volumes:
    #     - './orders:/usr/src/app'
    command: npm run serve

  catalog:
    restart: always
    build: ./catalog
    container_name: catalog-svc
    ports:
      - '3002:8080'
    # volumes:
    #     - './catalog:/usr/src/app'
    command: npm run serve

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 'test'
      POSTGRES_USER: 'test'
      POSTGRES_DB: 'test'
      PGDATA: '/var/lib/postgresql/data/db-files/'
    ports:
      - '5432:5432'
    command: postgres -c listen_addresses='*'

#   zookeeper1:
#     image: confluent/zookeeper
#     hostname: zookeeper1
#     ports:
#       - "2181"
#     environment:
#       zk_id: 1
#       zk_server.1: zookeeper1:2888:3888
#       zk_server.2: zookeeper2:2888:3888
#       zk_server.3: zookeeper3:2888:3888
#     networks:
#       main:
#         aliases:
#           - zookeeper1

#   zookeeper2:
#     image: confluent/zookeeper
#     hostname: zookeeper2
#     ports:
#       - "2181"
#     environment:
#       zk_id: 2
#       zk_server.1: zookeeper1:2888:3888
#       zk_server.2: zookeeper2:2888:3888
#       zk_server.3: zookeeper3:2888:3888
#     networks:
#       main:
#         aliases:
#           - zookeeper2

#   zookeeper3:
#     image: confluent/zookeeper
#     hostname: zookeeper3
#     ports:
#       - "2181"
#     environment:
#       zk_id: 3
#       zk_server.1: zookeeper1:2888:3888
#       zk_server.2: zookeeper2:2888:3888
#       zk_server.3: zookeeper3:2888:3888
#     networks:
#       main:
#         aliases:
#           - zookeeper3

#   kafka1:
#     image: confluent/kafka
#     hostname: kafka1
#     ports:
#       - "9092"
#     depends_on:
#       - zookeeper1
#       - zookeeper2
#       - zookeeper3
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
#     networks:
#       main:
#         aliases:
#           - kafka1

#   kafka2:
#     image: confluent/kafka
#     hostname: kafka2
#     depends_on:
#       - zookeeper1
#       - zookeeper2
#       - zookeeper3
#     ports:
#       - "9092"
#     environment:
#       KAFKA_BROKER_ID: 2
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
#     networks:
#       main:
#         aliases:
#           - kafka2

#   kafka3:
#     image: confluent/kafka
#     hostname: kafka3
#     depends_on:
#       - zookeeper1
#       - zookeeper2
#       - zookeeper3
#     ports:
#       - "9092"
#     environment:
#       KAFKA_BROKER_ID: 3
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
#     networks:
#       main:
#         aliases:
#           - kafka3

#   schema-registry:
#     image: confluent/schema-registry
#     hostname: schema-registry
#     depends_on:
#       - zookeeper1
#       - zookeeper2
#       - zookeeper3
#       - kafka1
#       - kafka2
#       - kafka3
#     ports:
#       - "8081"
#     environment:
#       SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
#     networks:
#       main:
#         aliases:
#           - schema-registry

# networks:
#   main:
